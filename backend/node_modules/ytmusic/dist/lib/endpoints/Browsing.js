"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getArtist = void 0;
var utils = __importStar(require("../utils"));
exports.getArtist = function (cookie, args, channelId) { return __awaiter(void 0, void 0, void 0, function () {
    var result, data, songs, albums, artist;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, utils.sendRequest(cookie, {
                    id: channelId,
                    type: 'ARTIST',
                    endpoint: 'browse',
                    userID: args.userID,
                    authUser: args.authUser
                })];
            case 1:
                result = _a.sent();
                if (result.error)
                    throw new Error(result.error.status);
                data = result.contents.singleColumnBrowseResultsRenderer.tabs[0].tabRenderer
                    .content.sectionListRenderer.contents;
                songs = { results: [] };
                albums = { results: [] };
                if (data[0].musicShelfRenderer.contents) {
                    if (data[0].musicShelfRenderer.bottomEndpoint)
                        songs.browseId =
                            data[0].musicShelfRenderer.bottomEndpoint.browseEndpoint.browseId;
                    data[0].musicShelfRenderer.contents.map(function (e, i) {
                        e = e.musicResponsiveListItemRenderer;
                        songs.results.push({
                            title: e.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text
                                .runs[0],
                            thumbnail: e.thumbnail.musicThumbnailRenderer.thumbnail.thumbnails,
                            author: e.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs,
                            album: e.flexColumns[2].musicResponsiveListItemFlexColumnRenderer.text
                                .runs[0],
                            id: e.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text
                                .runs[0].navigationEndpoint.watchEndpoint.videoId,
                            url: "https://music.youtube.com/watch?v=" + e.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text.runs[0].navigationEndpoint.watchEndpoint.videoId
                        });
                    });
                }
                if (data[1].musicCarouselShelfRenderer) {
                    if (data[1].musicCarouselShelfRenderer.header
                        .musicCarouselShelfBasicHeaderRenderer.title.runs[0].text === 'Albums') {
                        if (data[1].musicCarouselShelfRenderer.header
                            .musicCarouselShelfBasicHeaderRenderer.moreContentButton)
                            albums.browseId =
                                data[1].musicCarouselShelfRenderer.header.musicCarouselShelfBasicHeaderRenderer.moreContentButton;
                        data[1].musicCarouselShelfRenderer.contents.map(function (e, i) {
                            e = e.musicTwoRowItemRenderer;
                            albums.results.push({
                                title: e.title.runs[0],
                                thumbnail: e.thumbnailRenderer.musicThumbnailRenderer.thumbnail.thumbnails,
                                year: e.subtitle.runs[2].text,
                                author: e.subtitle.runs[0].text,
                                browseId: e.navigationEndpoint.browseEndpoint.browseId,
                                url: "https://music.youtube.com/playlist?list=" + e.thumbnailOverlay.musicItemThumbnailOverlayRenderer.content.musicPlayButtonRenderer.playNavigationEndpoint.watchPlaylistEndpoint.playlistId
                            });
                        });
                    }
                }
                artist = {
                    name: result.header.musicImmersiveHeaderRenderer.title.runs[0].text,
                    description: result.header.musicImmersiveHeaderRenderer.description
                        ? result.header.musicImmersiveHeaderRenderer.description.runs[0].text
                        : '',
                    songs: songs,
                    albums: albums
                };
                return [2 /*return*/, artist];
        }
    });
}); };
